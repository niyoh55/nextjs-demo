{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\REACT TUT\\\\section23.325\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { useRouter } from \"next/router\";\nimport { MongoClient } from \"mongodb\";\nimport React from \"react\";\nimport MeetupDetail from \"./../../components/meetups/MeetupDetail\";\nexport default function MeetupDetails(props) {\n  // const router = useRouter;\n  // console.log(router.query);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props._id,\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect(\"mongodb+srv://niyoh:niyoh123@cluster0.3elva.mongodb.net/ReduxCourse?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); //console.log(meetupIds);\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const params = context.params;\n  const meetupId = context.params.meetupId; //fetch for a single meetup\n\n  const client = await MongoClient.connect(\"mongodb+srv://niyoh:niyoh123@cluster0.3elva.mongodb.net/ReduxCourse?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  }); //const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n  //console.log(meetupIds);\n\n  client.close(); //console.log(meetupId);\n\n  return {\n    props: selectedMeetup\n  };\n};","map":{"version":3,"sources":["F:/REACT TUT/section23.325/pages/[meetupId]/index.js"],"names":["useRouter","MongoClient","React","MeetupDetail","MeetupDetails","props","_id","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C;AACA;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,EAAE,EAAEA,KAAK,CAACC,GADZ;AAEE,MAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,MAAA,KAAK,EAAEF,KAAK,CAACG,KAHf;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACI,OAJjB;AAKE,MAAA,WAAW,EAAEJ,KAAK,CAACK;AALrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;AAED,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,iGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEZ,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCa,OAAvC,EAAtB,CAPwC,CAQxC;;AACAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAAClB,GAAP,CAAWqB,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD,CAjBM;AAmBP,OAAO,MAAMC,cAAc,GAAG,MAAOC,OAAP,IAAmB;AAC/C,QAAMJ,MAAM,GAAGI,OAAO,CAACJ,MAAvB;AACA,QAAMC,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAF+C,CAG/C;;AACA,QAAMd,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,iGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMc,cAAc,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0B;AACrDzB,IAAAA,GAAG,EAAEoB;AADgD,GAA1B,CAA7B,CAV+C,CAa/C;AACA;;AACAd,EAAAA,MAAM,CAACQ,KAAP,GAf+C,CAiB/C;;AACA,SAAO;AACLf,IAAAA,KAAK,EAAEyB;AADF,GAAP;AAGD,CArBM","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { MongoClient } from \"mongodb\";\r\nimport React from \"react\";\r\nimport MeetupDetail from \"./../../components/meetups/MeetupDetail\";\r\nexport default function MeetupDetails(props) {\r\n  // const router = useRouter;\r\n  // console.log(router.query);\r\n  return (\r\n    <React.Fragment>\r\n      <MeetupDetail\r\n        id={props._id}\r\n        image={props.image}\r\n        title={props.title}\r\n        address={props.address}\r\n        description={props.description}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://niyoh:niyoh123@cluster0.3elva.mongodb.net/ReduxCourse?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  //console.log(meetupIds);\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const params = context.params;\r\n  const meetupId = context.params.meetupId;\r\n  //fetch for a single meetup\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://niyoh:niyoh123@cluster0.3elva.mongodb.net/ReduxCourse?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: meetupId,\r\n  });\r\n  //const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n  //console.log(meetupIds);\r\n  client.close();\r\n\r\n  //console.log(meetupId);\r\n  return {\r\n    props: selectedMeetup,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}