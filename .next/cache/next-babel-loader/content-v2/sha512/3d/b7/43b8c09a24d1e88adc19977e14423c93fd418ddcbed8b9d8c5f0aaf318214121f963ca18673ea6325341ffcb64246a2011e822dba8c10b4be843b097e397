{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"F:\\\\REACT TUT\\\\section23.325\\\\pages\\\\[meetupId]\\\\index.js\";\nimport React from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"./../../components/meetups/MeetupDetail\";\nexport var __N_SSG = true;\nexport default function MeetupDetails(props) {\n  // const router = useRouter;\n  // console.log(router.query);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      id: props._id,\n      image: props.image,\n      title: props.title,\n      address: props.address,\n      description: props.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["F:/REACT TUT/section23.325/pages/[meetupId]/index.js"],"names":["React","Head","MeetupDetail","MeetupDetails","props","title","description","_id","image","address"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;;AACA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C;AACA;AACA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAED,KAAK,CAACE;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,YAAD;AACE,MAAA,EAAE,EAAEF,KAAK,CAACG,GADZ;AAEE,MAAA,KAAK,EAAEH,KAAK,CAACI,KAFf;AAGE,MAAA,KAAK,EAAEJ,KAAK,CAACC,KAHf;AAIE,MAAA,OAAO,EAAED,KAAK,CAACK,OAJjB;AAKE,MAAA,WAAW,EAAEL,KAAK,CAACE;AALrB;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;KAlBuBH,a","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\nimport React from \"react\";\r\nimport Head from \"next/head\";\r\nimport MeetupDetail from \"./../../components/meetups/MeetupDetail\";\r\nexport default function MeetupDetails(props) {\r\n  // const router = useRouter;\r\n  // console.log(router.query);\r\n  return (\r\n    <React.Fragment>\r\n      <Head>\r\n        <title>{props.title}</title>\r\n        <meta name=\"description\" content={props.description} />\r\n      </Head>\r\n      <MeetupDetail\r\n        id={props._id}\r\n        image={props.image}\r\n        title={props.title}\r\n        address={props.address}\r\n        description={props.description}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport const getStaticPaths = async () => {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://niyoh:niyoh123@cluster0.3elva.mongodb.net/ReduxCourse?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async (context) => {\r\n  const params = context.params;\r\n  const meetupId = context.params.meetupId;\r\n  //fetch for a single meetup\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://niyoh:niyoh123@cluster0.3elva.mongodb.net/ReduxCourse?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      id: selectedMeetup._id.toString(),\r\n      title: selectedMeetup.title,\r\n      address: selectedMeetup.address,\r\n      image: selectedMeetup.image,\r\n      description: selectedMeetup.description,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}